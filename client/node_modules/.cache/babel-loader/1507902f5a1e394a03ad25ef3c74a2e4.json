{"ast":null,"code":"import _defineProperty from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justinemays/simple-book-finder/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justinemays/simple-book-finder/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      bookSearch: [],\n      bookData: [],\n      title: \"\",\n      authors: \"\",\n      description: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          bookSearch: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get books update the books state\n      event.preventDefault();\n      bookData = [];\n      API.getBooks(_this.state.bookSearch).then(function (res) {\n        res.data.items.forEach(function (data) {\n          // console.log(data.volumeInfo)\n          var authors = \"\";\n          var image = \"\"; // let authors = data.volumeInfo.authors.join().replace(\",\", \" & \")\n\n          if (data.volumeInfo.authors === undefined) {\n            authors = data.volumeInfo.authors;\n          } else {\n            authors = data.volumeInfo.authors.join().replace(/,/gi, \", \");\n          }\n\n          if (data.volumeInfo.imageLinks === undefined) {\n            image = \"https://placehold.it/128x196\";\n          } else {\n            image = data.volumeInfo.imageLinks.thumbnail;\n          }\n\n          bookData.push({\n            title: data.volumeInfo.title,\n            authors: authors,\n            description: data.volumeInfo.description,\n            image: image,\n            infoLink: data.volumeInfo.infoLink\n          });\n\n          _this.setState({\n            bookSearch: bookData\n          });\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.setState({\n        bookSearch: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.authors,\n        onChange: this.handleInputChange,\n        name: \"author\",\n        placeholder: \"Author (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        name: \"synopsis\",\n        placeholder: \"Description (Optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.authors && this.state.title),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Submit Book\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, book.title, \" by \", book.authors)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/justinemays/simple-book-finder/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","bookSearch","bookData","title","authors","description","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","items","forEach","image","volumeInfo","undefined","join","replace","imageLinks","thumbnail","push","infoLink","books","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    bookSearch: [],\n    bookData: [],\n    title: \"\",\n    authors: \"\",\n    description: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ bookSearch: res.data})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n       // When the form is submitted, prevent its default behavior, get books update the books state\n   event.preventDefault();\n   bookData = [];\n   API.getBooks(this.state.bookSearch)\n     .then(res => {\n       res.data.items.forEach(data => {\n         // console.log(data.volumeInfo)\n         let authors = \"\"\n         let image = \"\"\n         // let authors = data.volumeInfo.authors.join().replace(\",\", \" & \")\n\n         if (data.volumeInfo.authors === undefined) {\n           authors = data.volumeInfo.authors\n         } else {\n           authors = data.volumeInfo.authors.join().replace(/,/gi, \", \");\n         }\n\n         if (data.volumeInfo.imageLinks === undefined) {\n           image = \"https://placehold.it/128x196\"\n\n         } else {\n           image = data.volumeInfo.imageLinks.thumbnail;\n         }\n\n         bookData.push({\n           title: data.volumeInfo.title,\n           authors: authors,\n           description: data.volumeInfo.description,\n           image: image,\n           infoLink: data.volumeInfo.infoLink,\n         })\n\n         this.setState({ bookSearch: bookData });\n       })\n     })\n     .catch(err => console.log(err));\n\n   this.setState({ bookSearch: \"\" })\n };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                value={this.state.authors}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                value={this.state.description}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Description (Optional)\"\n              />\n              <FormBtn\n                disabled={!(this.state.authors && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.authors}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}